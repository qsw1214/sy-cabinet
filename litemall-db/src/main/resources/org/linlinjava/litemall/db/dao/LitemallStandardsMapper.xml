<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.LitemallStandardsMapper">
	<resultMap id="BaseResultMap"
		type="org.linlinjava.litemall.db.domain.LitemallStandards">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="stan_name" jdbcType="VARCHAR" property="stanName" />
		<result column="stan_details" jdbcType="VARCHAR" property="stanDetails" />
		<result column="stan_money" jdbcType="VARCHAR" property="stanMoney" />
		<result column="stan_capping" jdbcType="INTEGER" property="stanCapping" />
		<result column="stan_mian_id" jdbcType="INTEGER" property="stanMianId" />
		<result column="stan_free" jdbcType="INTEGER" property="stanFree" />
		<result column="stan_beyond" jdbcType="INTEGER" property="stanBeyond" />
		<result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="delect" jdbcType="BIT" property="delect" />
		<result column="main_cab_num" jdbcType="VARCHAR" property="mainCabNum" />
		<result column="stan_deposit" jdbcType="INTEGER" property="stanDeposit"/>
	</resultMap>
	
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, stan_name, stan_details, stan_money, stan_capping, stan_mian_id,
		stan_free, stan_beyond,stan_deposit,
		add_time, update_time, delect
	</sql>
	<select id="getSatnByMain" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	select * from litemall_standards 
	where stan_mian_id = #{mainId,jdbcType=INTEGER} 
	and delect = 0
	</select>
	<select id="selectByExample"
		parameterType="org.linlinjava.litemall.db.domain.LitemallStandardsExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from litemall_standards
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByExample"
		parameterType="org.linlinjava.litemall.db.domain.LitemallStandardsExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from litemall_standards
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.linlinjava.litemall.db.domain.LitemallStandards">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into litemall_standards (stan_name, stan_details, stan_money,
		stan_capping, stan_mian_id, stan_free,
		stan_beyond, stan_deposit,add_time, update_time,
		delect)
		values (#{stanName,jdbcType=VARCHAR}, #{stanDetails,jdbcType=VARCHAR},
		#{stanMoney,jdbcType=VARCHAR},
		#{stanCapping,jdbcType=INTEGER}, #{stanMianId,jdbcType=INTEGER}, #{stanFree,jdbcType=INTEGER},
		#{stanBeyond,jdbcType=INTEGER}, #{stanDeposit,jdbcType=INTEGER},#{addTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{delect,jdbcType=BIT})
	</insert>
	<insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.LitemallStandards">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into litemall_standards
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="stanName != null">
				stan_name,
			</if>
			<if test="stanDetails != null">
				stan_details,
			</if>
			<if test="stanMoney != null">
				stan_money,
			</if>
			<if test="stanCapping != null">
				stan_capping,
			</if>
			<if test="stanMianId != null">
				stan_mian_id,
			</if>
			<if test="stanFree != null">
				stan_free,
			</if>
			<if test="stanBeyond != null">
				stan_beyond,
			</if>
			<if test="stanDeposit != null">
				stan_deposit,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="delect != null">
				delect,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="stanName != null">
				#{stanName,jdbcType=VARCHAR},
			</if>
			<if test="stanDetails != null">
				#{stanDetails,jdbcType=VARCHAR},
			</if>
			<if test="stanMoney != null">
				#{stanMoney,jdbcType=VARCHAR},
			</if>
			<if test="stanCapping != null">
				#{stanCapping,jdbcType=INTEGER},
			</if>
			<if test="stanMianId != null">
				#{stanMianId,jdbcType=INTEGER},
			</if>
			<if test="stanFree != null">
				#{stanFree,jdbcType=INTEGER},
			</if>
			<if test="stanBeyond != null">
				#{stanBeyond,jdbcType=INTEGER},
			</if>
			<if test="stanDeposit != null">
				#{stanDeposit,jdbcType=INTEGER},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="delect != null">
				#{delect,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="org.linlinjava.litemall.db.domain.LitemallStandardsExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from litemall_standards
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update litemall_standards
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.stanName != null">
				stan_name = #{record.stanName,jdbcType=VARCHAR},
			</if>
			<if test="record.stanDetails != null">
				stan_details = #{record.stanDetails,jdbcType=VARCHAR},
			</if>
			<if test="record.stanMoney != null">
				stan_money = #{record.stanMoney,jdbcType=VARCHAR},
			</if>
			<if test="record.stanCapping != null">
				stan_capping = #{record.stanCapping,jdbcType=INTEGER},
			</if>
			<if test="record.stanMianId != null">
				stan_mian_id = #{record.stanMianId,jdbcType=INTEGER},
			</if>
			<if test="record.stanFree != null">
				stan_free = #{record.stanFree,jdbcType=INTEGER},
			</if>
			<if test="record.stanBeyond != null">
				stan_beyond = #{record.stanBeyond,jdbcType=INTEGER},
			</if>
			<if test="record.stanDeposit != null">
				stan_deposit = #{record.stanDeposit,jdbcType=INTEGER},
			</if>
			<if test="record.addTime != null">
				add_time = #{record.addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.delect != null">
				delect = #{record.delect,jdbcType=BIT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update litemall_standards
		set id = #{record.id,jdbcType=INTEGER},
		stan_name = #{record.stanName,jdbcType=VARCHAR},
		stan_details = #{record.stanDetails,jdbcType=VARCHAR},
		stan_money = #{record.stanMoney,jdbcType=VARCHAR},
		stan_capping = #{record.stanCapping,jdbcType=INTEGER},
		stan_mian_id = #{record.stanMianId,jdbcType=INTEGER},
		stan_free = #{record.stanFree,jdbcType=INTEGER},
		stan_beyond = #{record.stanBeyond,jdbcType=INTEGER},
		stan_deposit = #{record.stanDeposit,jdbcType=INTEGER},
		add_time = #{record.addTime,jdbcType=TIMESTAMP},
		update_time = #{record.updateTime,jdbcType=TIMESTAMP},
		delect = #{record.delect,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.LitemallStandards">
		update litemall_standards
		<set>
			<if test="stanName != null">
				stan_name = #{stanName,jdbcType=VARCHAR},
			</if>
			<if test="stanDetails != null">
				stan_details = #{stanDetails,jdbcType=VARCHAR},
			</if>
			<if test="stanMoney != null">
				stan_money = #{stanMoney,jdbcType=VARCHAR},
			</if>
			<if test="stanCapping != null">
				stan_capping = #{stanCapping,jdbcType=INTEGER},
			</if>
			<if test="stanMianId != null">
				stan_mian_id = #{stanMianId,jdbcType=INTEGER},
			</if>
			<if test="stanFree != null">
				stan_free = #{stanFree,jdbcType=INTEGER},
			</if>
			<if test="stanBeyond != null">
				stan_beyond = #{stanBeyond,jdbcType=INTEGER},
			</if>
			<if test="stanDeposit != null">
				stan_deposit = #{stanDeposit,jdbcType=INTEGER},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="delect != null">
				delect = #{delect,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
		update litemall_standards set delect = 1
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="queryStandards" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select *
		from litemall_standards
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectStanBySub" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT *
		FROM litemall_standards AS stan,litemall_sub_cabinet AS sub
		WHERE stan.id = sub.stan_id
		AND sub.id = #{subCabId,jdbcType=INTEGER}
	</select>
	<!-- 根据柜组ID查询出所有规格及其下面可用子柜数量 -->
	<select id="getStandardList" resultMap="BaseResultMapAndCount"
		parameterType="java.lang.Integer">
		SELECT sub.id AS subid,stan.*
		FROM litemall_standards AS stan
		LEFT JOIN litemall_sub_cabinet AS sub ON sub.stan_id = stan.id
		WHERE stan.delect = 0 and sub.status = 0
		AND stan.stan_mian_id = #{mainid,jdbcType=INTEGER}
		AND stan.id = sub.stan_id
		ORDER BY stan.id
	</select>

	<resultMap id="BaseResultMapAndCount"
		type="org.linlinjava.litemall.db.domain.LitemallStandardsAndCount">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="stan_name" jdbcType="VARCHAR" property="stanName" />
		<result column="stan_details" jdbcType="VARCHAR" property="stanDetails" />
		<result column="stan_money" jdbcType="VARCHAR" property="stanMoney" />
		<result column="stan_capping" jdbcType="INTEGER" property="stanCapping" />
		<result column="stan_mian_id" jdbcType="INTEGER" property="stanMianId" />
		<result column="stan_free" jdbcType="INTEGER" property="stanFree" />
		<result column="stan_beyond" jdbcType="INTEGER" property="stanBeyond" />
		<result column="stan_money" jdbcType="INTEGER" property="stanMoney" />
		<result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="delect" jdbcType="BIT" property="delect" />
		<result column="subid" jdbcType="INTEGER" property="subid" />
		<result column="count" jdbcType="INTEGER" property="count"/> 
	</resultMap>

  <!--查询规格信息+柜组编码-->
  <select id="queryStand" parameterType="Map" resultMap="BaseResultMap">
    select stan.*, main.main_cab_num
    from litemall_standards as stan, litemall_main_cabinet AS main
    where delect = 0
    and stan.stan_mian_id = main.id
    <if test="stanName != null">
      and stan_name = #{stanName,jdbcType=VARCHAR}
    </if>
    <if test="stanDeposit != null">
      and stan_deposit = #{stanDeposit,jdbcType=INTEGER}
    </if>
    <if test="stanMoney != null">
      and stan_money = #{stanMoney,jdbcType=VARCHAR}
    </if>
    <if test="stanCapping != null">
      and stan_capping = #{stanCapping,jdbcType=INTEGER}
    </if>
    <if test="stanMianId != null">
      and stan_mian_id = #{stanMianId,jdbcType=INTEGER}
    </if>
    <if test="stanFree != null">
      and stan_free = #{stanFree,jdbcType=INTEGER}
    </if>
    <if test="stanBeyond != null">
      and stan_beyond = #{stanBeyond,jdbcType=INTEGER}
    </if>
    <if test="currIndex !=null and pageSize != null">
      limit #{currIndex} , #{pageSize}
    </if>
  </select>
	<select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	select <include refid="Base_Column_List" />
	from litemall_standards
	where id = #{id,jdbcType=INTEGER}
	</select>
</mapper>