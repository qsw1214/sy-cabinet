<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.linlinjava.litemall.db.dao.LitemallDepositMapper" >
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.LitemallDeposit" >
    <result column="depo_id" property="depoId" jdbcType="INTEGER" />
    <result column="depo_user_id" property="depoUserId" jdbcType="INTEGER" />
    <result column="depo_sub_id" property="depoSubId" jdbcType="INTEGER" />
    <result column="depo_money" property="depoMoney" jdbcType="INTEGER" />
    <result column="depo_record_id" property="depoRecordId" jdbcType="INTEGER" />
    <result column="depo_status" property="depoStatus" jdbcType="INTEGER" />
    <result column="return_time" property="returnTime" jdbcType="TIMESTAMP" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="depo_deleted" property="depoDeleted" jdbcType="BIT" />
    <result column="stan_name" property="stanName" jdbcType="VARCHAR" />
    <result column="sub_cab_num" property="subCabNum" jdbcType="VARCHAR" />
    <result column="region" property="mainRegion" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    depo_id, depo_user_id, depo_sub_id, depo_money, depo_record_id, depo_status, return_time, 
    add_time, update_time, depo_deleted
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.linlinjava.litemall.db.domain.LitemallDepositExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from litemall_deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallDepositExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from litemall_deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.LitemallDeposit" >
    <selectKey resultType="java.lang.Integer" keyProperty="depoId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into litemall_deposit (depo_user_id, depo_sub_id, depo_money, 
      depo_record_id, depo_status, return_time, 
      add_time, update_time, depo_deleted
      )
    values (#{depoUserId,jdbcType=INTEGER}, #{depoSubId,jdbcType=INTEGER}, #{depoMoney,jdbcType=INTEGER}, 
      #{depoRecordId,jdbcType=INTEGER}, #{depoStatus,jdbcType=INTEGER}, #{returnTime,jdbcType=TIMESTAMP}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{depoDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.LitemallDeposit" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="depoId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into litemall_deposit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="depoUserId != null" >
        depo_user_id,
      </if>
      <if test="depoSubId != null" >
        depo_sub_id,
      </if>
      <if test="depoMoney != null" >
        depo_money,
      </if>
      <if test="depoRecordId != null" >
        depo_record_id,
      </if>
      <if test="depoStatus != null" >
        depo_status,
      </if>
      <if test="returnTime != null" >
        return_time,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="depoDeleted != null" >
        depo_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="depoUserId != null" >
        #{depoUserId,jdbcType=INTEGER},
      </if>
      <if test="depoSubId != null" >
        #{depoSubId,jdbcType=INTEGER},
      </if>
      <if test="depoMoney != null" >
        #{depoMoney,jdbcType=INTEGER},
      </if>
      <if test="depoRecordId != null" >
        #{depoRecordId,jdbcType=INTEGER},
      </if>
      <if test="depoStatus != null" >
        #{depoStatus,jdbcType=INTEGER},
      </if>
      <if test="returnTime != null" >
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="depoDeleted != null" >
        #{depoDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallDepositExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from litemall_deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_deposit
    <set >
      <if test="record.depoId != null" >
        depo_id = #{record.depoId,jdbcType=INTEGER},
      </if>
      <if test="record.depoUserId != null" >
        depo_user_id = #{record.depoUserId,jdbcType=INTEGER},
      </if>
      <if test="record.depoSubId != null" >
        depo_sub_id = #{record.depoSubId,jdbcType=INTEGER},
      </if>
      <if test="record.depoMoney != null" >
        depo_money = #{record.depoMoney,jdbcType=INTEGER},
      </if>
      <if test="record.depoRecordId != null" >
        depo_record_id = #{record.depoRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.depoStatus != null" >
        depo_status = #{record.depoStatus,jdbcType=INTEGER},
      </if>
      <if test="record.returnTime != null" >
        return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.depoDeleted != null" >
        depo_deleted = #{record.depoDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_deposit
    set depo_id = #{record.depoId,jdbcType=INTEGER},
      depo_user_id = #{record.depoUserId,jdbcType=INTEGER},
      depo_sub_id = #{record.depoSubId,jdbcType=INTEGER},
      depo_money = #{record.depoMoney,jdbcType=INTEGER},
      depo_record_id = #{record.depoRecordId,jdbcType=INTEGER},
      depo_status = #{record.depoStatus,jdbcType=INTEGER},
      return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      depo_deleted = #{record.depoDeleted,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!-- 修改押金信息 -->
  <update id="updateByPrimaryKeySelective"
          parameterType="org.linlinjava.litemall.db.domain.LitemallDeposit">
    update litemall_deposit
    <set >
      <if test="depoUserId != null" >
        depo_user_id = #{depoUserId,jdbcType=INTEGER},
      </if>
      <if test="depoSubId != null" >
        depo_sub_id = #{depoSubId,jdbcType=INTEGER},
      </if>
      <if test="depoMoney != null" >
        depo_money = #{depoMoney,jdbcType=INTEGER},
      </if>
      <if test="depoRecordId != null" >
        depo_record_id = #{depoRecordId,jdbcType=INTEGER},
      </if>
      <if test="depoStatus != null" >
        depo_status = #{depoStatus,jdbcType=INTEGER},
      </if>
      <if test="returnTime != null" >
        return_time = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="depoDeleted != null" >
        depo_deleted = #{depoDeleted,jdbcType=BIT},
      </if>
    </set>
    where depo_id = #{depoId,jdbcType=INTEGER}
  </update>

  <!-- 单个查询 -->
  <select id="selectDeposit" parameterType="org.linlinjava.litemall.db.domain.LitemallDeposit" resultMap="BaseResultMap">
    select depo.* , stan.stan_name, sub.sub_cab_num ,main.region
    FROM
    litemall_deposit AS depo,
    litemall_standards AS stan,
    litemall_sub_cabinet AS sub,
    litemall_main_cabinet AS main
    WHERE depo.depo_sub_id = sub.id
    and sub.stan_id = stan.id
    and stan.stan_mian_id = main.id
    AND depo_deleted = 0
    <if test="depoUserId != null" >
      and depo_user_id = #{depoUserId,jdbcType=INTEGER}
    </if>
    <if test="depoSubId != null" >
      and depo_sub_id = #{depoSubId,jdbcType=INTEGER}
    </if>
    <if test="depoStatus != null" >
      and depo_status = #{depoStatus,jdbcType=INTEGER}
    </if>
    <if test="depoRecordId != null" >
      and depo_record_id = #{depoRecordId,jdbcType=INTEGER}
    </if>
    <if test="page !=null and size != null">
      limit #{page} , #{size}
    </if>
  </select>
  <select id="queryCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*) FROM litemall_deposit WHERE depo_deleted = 0 and depo_user_id = #{depoUserId,jdbcType=INTEGER}
  </select>
  <!-- 根据订单ID查询 -->
  <select id="getDspositByUsaId" parameterType="java.lang.Integer" resultMap ="BaseResultMap" >
  	select * FROM
    litemall_deposit WHERE depo_record_id = #{usaId,jdbcType=INTEGER}
  </select>
</mapper>