<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.linlinjava.litemall.db.dao.LitemallUsageRecordMapper">
	<resultMap id="BaseResultMap"
		type="org.linlinjava.litemall.db.domain.LitemallUsageRecord">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="sub_cab_id" property="subCabId" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
		<result column="pre_amount" property="preAmount" jdbcType="REAL" />
		<result column="actual_amount" property="actualAmount" jdbcType="REAL" />
		<result column="pre_time" property="preTime" jdbcType="TIMESTAMP" />
		<result column="actual_time" property="actualTime" jdbcType="TIMESTAMP" />
		<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="phone_pass" property="phonePass" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="deleted" property="deleted" jdbcType="BIT" />
		<result column="region" property="region" jdbcType="VARCHAR" />
		<result column="sub_cab_num" property="subCabNum" jdbcType="VARCHAR" />
		<result column="standard" property="standard" jdbcType="VARCHAR" />
		<result column="usa_money" property="usaMoney" jdbcType="VARCHAR" />
		<result column="usa_capp" property="usaCapp" jdbcType="INTEGER" />
		<result column="usa_free" property="usaFree" jdbcType="INTEGER" />
		<result column="usa_beyond" property="usaBeyond" jdbcType="INTEGER" />
		<result column="stan_deposit" property="stanDeposit" jdbcType="INTEGER" />
		<result column="sub_cab_num" property="subCabNum" jdbcType="VARCHAR" />
		<result column="stan_name" property="stanName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, user_id, sub_cab_id, `status`, start_time, end_time, pre_amount,
		actual_amount,
		pre_time, actual_time, add_time, phone_pass, usa_money,
		usa_capp, usa_free,
		usa_beyond, update_time, deleted
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="org.linlinjava.litemall.db.domain.LitemallUsageRecordExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from litemall_usage_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from litemall_usage_record
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from litemall_usage_record
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="org.linlinjava.litemall.db.domain.LitemallUsageRecordExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from litemall_usage_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="org.linlinjava.litemall.db.domain.LitemallUsageRecord"
		useGeneratedKeys="true" keyProperty="id">
		insert into litemall_usage_record (user_id, sub_cab_id, `status`,
		start_time, end_time, pre_amount,
		actual_amount, pre_time, actual_time,
		add_time, phone_pass, usa_money,
		usa_capp, usa_free, usa_beyond,
		update_time,deleted)
		values (#{userId,jdbcType=INTEGER},
		#{subCabId,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
		#{preAmount,jdbcType=REAL},
		#{actualAmount,jdbcType=REAL},
		#{preTime,jdbcType=TIMESTAMP},
		#{actualTime,jdbcType=TIMESTAMP},
		#{addTime,jdbcType=TIMESTAMP}, #{phonePass,jdbcType=VARCHAR},
		#{usaMoney,jdbcType=VARCHAR},
		#{usaCapp,jdbcType=INTEGER},
		#{usaFree,jdbcType=INTEGER},
		#{usaBeyond,jdbcType=INTEGER},
		#{updateTime,jdbcType=TIMESTAMP},#{deleted,jdbcType=BIT})
		<selectKey resultType="java.lang.Integer" keyProperty="id"
							   order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
	</insert>
	<insert id="insertSelective"
		parameterType="org.linlinjava.litemall.db.domain.LitemallUsageRecord">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into litemall_usage_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="subCabId != null">
				sub_cab_id,
			</if>
			<if test="status != null">
				`status`,
			</if>
			<if test="startTime != null">
				start_time,
			</if>
			<if test="endTime != null">
				end_time,
			</if>
			<if test="preAmount != null">
				pre_amount,
			</if>
			<if test="actualAmount != null">
				actual_amount,
			</if>
			<if test="preTime != null">
				pre_time,
			</if>
			<if test="actualTime != null">
				actual_time,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="phonePass != null">
				phone_pass,
			</if>
			<if test="usaMoney != null">
				usa_money,
			</if>
			<if test="usaCapp != null">
				usa_capp,
			</if>
			<if test="usaFree != null">
				usa_free,
			</if>
			<if test="usaBeyond != null">
				usa_beyond,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="deleted != null">
				deleted,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="subCabId != null">
				#{subCabId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="startTime != null">
				#{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				#{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="preAmount != null">
				#{preAmount,jdbcType=REAL},
			</if>
			<if test="actualAmount != null">
				#{actualAmount,jdbcType=REAL},
			</if>
			<if test="preTime != null">
				#{preTime,jdbcType=TIMESTAMP},
			</if>
			<if test="actualTime != null">
				#{actualTime,jdbcType=TIMESTAMP},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="phonePass != null">
				#{phonePass,jdbcType=VARCHAR},
			</if>
			<if test="usaMoney != null">
				#{usaMoney,jdbcType=VARCHAR},
			</if>
			<if test="usaCapp != null">
				#{usaCapp,jdbcType=INTEGER},
			</if>
			<if test="usaFree != null">
				#{usaFree,jdbcType=INTEGER},
			</if>
			<if test="usaBeyond != null">
				#{usaBeyond,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleted != null">
				#{deleted,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="org.linlinjava.litemall.db.domain.LitemallUsageRecordExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from litemall_usage_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update litemall_usage_record
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.subCabId != null">
				sub_cab_id = #{record.subCabId,jdbcType=INTEGER},
			</if>
			<if test="record.status != null">
				`status` = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.startTime != null">
				start_time = #{record.startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.endTime != null">
				end_time = #{record.endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.preAmount != null">
				pre_amount = #{record.preAmount,jdbcType=REAL},
			</if>
			<if test="record.actualAmount != null">
				actual_amount = #{record.actualAmount,jdbcType=REAL},
			</if>
			<if test="record.preTime != null">
				pre_time = #{record.preTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.actualTime != null">
				actual_time = #{record.actualTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.addTime != null">
				add_time = #{record.addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.phonePass != null">
				phone_pass = #{record.phonePass,jdbcType=VARCHAR},
			</if>
			<if test="record.usaMoney != null">
				usa_money = #{record.usaMoney,jdbcType=VARCHAR},
			</if>
			<if test="record.usaCapp != null">
				usa_capp = #{record.usaCapp,jdbcType=INTEGER},
			</if>
			<if test="record.usaFree != null">
				usa_free = #{record.usaFree,jdbcType=INTEGER},
			</if>
			<if test="record.usaBeyond != null">
				usa_beyond = #{record.usaBeyond,jdbcType=INTEGER},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.deleted != null">
				deleted = #{record.deleted,jdbcType=BIT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update litemall_usage_record
		set id = #{record.id,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		sub_cab_id =
		#{record.subCabId,jdbcType=INTEGER},
		`status` =
		#{record.status,jdbcType=INTEGER},
		start_time =
		#{record.startTime,jdbcType=TIMESTAMP},
		end_time =
		#{record.endTime,jdbcType=TIMESTAMP},
		pre_amount =
		#{record.preAmount,jdbcType=REAL},
		actual_amount =
		#{record.actualAmount,jdbcType=REAL},
		pre_time =
		#{record.preTime,jdbcType=TIMESTAMP},
		actual_time =
		#{record.actualTime,jdbcType=TIMESTAMP},
		add_time =
		#{record.addTime,jdbcType=TIMESTAMP},
		phone_pass =
		#{record.phonePass,jdbcType=VARCHAR},
		usa_money =
		#{record.usaMoney,jdbcType=VARCHAR},
		usa_capp =
		#{record.usaCapp,jdbcType=INTEGER},
		usa_free =
		#{record.usaFree,jdbcType=INTEGER},
		usa_beyond =
		#{record.usaBeyond,jdbcType=INTEGER},
		update_time =
		#{record.updateTime,jdbcType=TIMESTAMP},
		deleted =
		#{record.deleted,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.LitemallUsageRecord">
		update litemall_usage_record
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="subCabId != null">
				sub_cab_id = #{subCabId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				`status` = #{status,jdbcType=INTEGER},
			</if>
			<if test="startTime != null">
				start_time = #{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				end_time = #{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="notice != null">
				notice = #{notice,jdbcType=INTEGER},
			</if>
			<if test="preAmount != null">
				pre_amount = #{preAmount,jdbcType=REAL},
			</if>
			<if test="actualAmount != null">
				actual_amount = #{actualAmount,jdbcType=REAL},
			</if>
			<if test="preTime != null">
				pre_time = #{preTime,jdbcType=TIMESTAMP},
			</if>
			<if test="actualTime != null">
				actual_time = #{actualTime,jdbcType=TIMESTAMP},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="phonePass != null">
				phone_pass = #{phonePass,jdbcType=VARCHAR},
			</if>
			<if test="usaMoney != null">
				usa_money = #{usaMoney,jdbcType=VARCHAR},
			</if>
			<if test="usaCapp != null">
				usa_capp = #{usaCapp,jdbcType=INTEGER},
			</if>
			<if test="usaFree != null">
				usa_free = #{usaFree,jdbcType=INTEGER},
			</if>
			<if test="usaBeyond != null">
				usa_beyond = #{usaBeyond,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleted != null">
				deleted = #{deleted,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.LitemallUsageRecord">
		update litemall_usage_record
		set user_id = #{userId,jdbcType=INTEGER},
		sub_cab_id = #{subCabId,jdbcType=INTEGER},
		`status` =
		#{status,jdbcType=INTEGER},
		start_time =
		#{startTime,jdbcType=TIMESTAMP},
		end_time =
		#{endTime,jdbcType=TIMESTAMP},
		pre_amount = #{preAmount,jdbcType=REAL},
		actual_amount = #{actualAmount,jdbcType=REAL},
		pre_time =
		#{preTime,jdbcType=TIMESTAMP},
		actual_time =
		#{actualTime,jdbcType=TIMESTAMP},
		add_time =
		#{addTime,jdbcType=TIMESTAMP},
		phone_pass =
		#{phonePass,jdbcType=VARCHAR},
		usa_money =
		#{usaMoney,jdbcType=VARCHAR},
		usa_capp = #{usaCapp,jdbcType=INTEGER},
		usa_free = #{usaFree,jdbcType=INTEGER},
		usa_beyond =
		#{usaBeyond,jdbcType=INTEGER},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		deleted = #{deleted,jdbcType=BIT}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 三表查询 -->
	<resultMap id="BaseOrderResultMap"
		type="org.linlinjava.litemall.db.domain.RecordAndMianAndSub">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="sub_cab_id" property="subCabId" jdbcType="INTEGER" />
		<result column="sub_cab_num" property="sub_cab_num" jdbcType="VARCHAR" /> <!-- 子柜表的编号 -->
		<result column="region" property="region" jdbcType="VARCHAR" /> <!-- 主柜表的区域 -->
		<result column="main_cab_num" property="main_cab_num" jdbcType="VARCHAR" /> <!-- 主柜表的编号 -->
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
		<result column="pre_amount" property="preAmount" jdbcType="REAL" />
		<result column="actual_amount" property="actualAmount"
			jdbcType="REAL" />
		<result column="pre_time" property="preTime" jdbcType="TIMESTAMP" />
		<result column="actual_time" property="actualTime" jdbcType="TIMESTAMP" />
		<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="phone_pass" property="phonePass" jdbcType="VARCHAR" />
		<result column="usa_money" property="usaMoney" jdbcType="VARCHAR" />
		<result column="usa_capp" property="usaCapp" jdbcType="INTEGER" />
		<result column="usa_free" property="usaFree" jdbcType="INTEGER" />
		<result column="usa_beyond" property="usaBeyond" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="deleted" property="deleted" jdbcType="BIT" />
	</resultMap>
	<select id="getnewOrder" resultMap="BaseOrderResultMap"
		parameterType="java.lang.Integer">
		SELECT
		usa.*,sub.sub_cab_num,main.region,main.main_cab_num
		FROM
		litemall_usage_record AS usa,
		litemall_sub_cabinet AS sub,
		litemall_main_cabinet AS main,
		litemall_standards AS stan
		WHERE usa.sub_cab_id = sub.id
		and sub.stan_id = stan.id
		and stan.stan_mian_id = main.id
		and usa.id = #{id,jdbcType=INTEGER}
	</select>
	<select id="getListOrder" resultMap="BaseOrderResultMap"
		parameterType="java.lang.Integer">
		SELECT
		usa.*,sub.sub_cab_num,main.region,main.main_cab_num
		FROM
		litemall_usage_record AS usa,
		litemall_sub_cabinet AS sub,
		litemall_main_cabinet AS main ,
		litemall_standards AS stan
		WHERE
		usa.user_id =#{userId,jdbcType=INTEGER}
		AND sub.id = usa.sub_cab_id
		AND sub.stan_id = stan.id
		AND stan.stan_mian_id = main.id
		and usa.deleted =0
		and (usa.status = 0 or usa.status = 2)
	</select>
	<select id="queryUsage" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT
		record.*, main.region, sub.sub_cab_num, stan.stan_name, stan.stan_deposit
		FROM litemall_usage_record AS record,
		litemall_standards AS stan,
		litemall_sub_cabinet AS sub,
		litemall_main_cabinet AS main
		WHERE record.sub_cab_id = sub.id
		AND sub.stan_id = stan.id
		AND stan.stan_mian_id = main.id
		and record.id = #{recordId,jdbcType=INTEGER}
	</select>
	<select id="RecordAndSub" resultMap="RecordAndSubMap"
		parameterType="map">
		select sta.stan_mian_id,rec.*,sub.sub_cab_num
		,sta.stan_name,sta.stan_money,
		sta.stan_capping,sta.stan_free,
		sta.stan_beyond from litemall_usage_record
		as rec left join
		litemall_sub_cabinet as
		sub on sub.id = rec.sub_cab_id left join
		litemall_standards as sta on sta.id =
		sub.stan_id where rec.status != 1
		and rec.user_id = #{userId,jdbcType=INTEGER}
		and sta.stan_mian_id =
		#{mainId,jdbcType=INTEGER}
	</select>
	<resultMap id="RecordAndSubMap"
		type="org.linlinjava.litemall.db.domain.UsageRecordAndSubCabinet">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="usa.id" jdbcType="INTEGER" />
		<result column="user_id" property="usa.userId" jdbcType="INTEGER" />
		<result column="sub_cab_id" property="usa.subCabId" jdbcType="INTEGER" />
		<result column="status" property="usa.status" jdbcType="INTEGER" />
		<result column="start_time" property="usa.startTime" jdbcType="TIMESTAMP" />
		<result column="end_time" property="usa.endTime" jdbcType="TIMESTAMP" />
		<result column="pre_amount" property="usa.preAmount" jdbcType="REAL" />
		<result column="actual_amount" property="usa.actualAmount"
			jdbcType="REAL" />
		<result column="pre_time" property="usa.preTime" jdbcType="TIMESTAMP" />
		<result column="actual_time" property="usa.actualTime"
			jdbcType="TIMESTAMP" />
		<result column="add_time" property="usa.addTime" jdbcType="TIMESTAMP" />
		<result column="phone_pass" property="usa.phonePass" jdbcType="VARCHAR" />
		<result column="update_time" property="usa.updateTime"
			jdbcType="TIMESTAMP" />
		<result column="deleted" property="usa.deleted" jdbcType="BIT" />
		<result column="region" property="usa.region" jdbcType="VARCHAR" />
		<result column="sub_cab_num" property="usa.subCabNum" jdbcType="VARCHAR" />
		<result column="standard" property="usa.standard" jdbcType="VARCHAR" />
		<result column="usa_money" property="usa.usaMoney" jdbcType="VARCHAR" />
		<result column="usa_capp" property="usa.usaCapp" jdbcType="INTEGER" />
		<result column="usa_free" property="usa.usaFree" jdbcType="INTEGER" />
		<result column="usa_beyond" property="usa.usaBeyond" jdbcType="INTEGER" />
		<result column="sub_cab_num" property="sub.subCabNum" jdbcType="VARCHAR" /> <!-- 子柜编号 -->
		<result column="stan_name" property="sta.stanName" jdbcType="VARCHAR" /> 	<!-- 规格名称 -->
		<result column="stan_money" property="sta.stanMoney" jdbcType="VARCHAR" />	<!-- 每小时价格 -->
		<result column="stan_capping" property="sta.stanCapping"
			jdbcType="INTEGER" />	<!-- 封顶时间 -->
		<result column="stan_free" property="sta.stanFree" jdbcType="INTEGER" />	<!-- 免费时间 -->
		<result column="stan_beyond" property="sta.stanBeyond"
			jdbcType="INTEGER" />	<!-- 超出时间 -->
	</resultMap>
	<!-- 修改实际金额 时间 状态 -->
	<update id="BagTaking" parameterType="Map">
		UPDATE
		litemall_usage_record
		SET status = #{status,jdbcType=INTEGER},
		end_time
		= #{endTime,jdbcType=TIMESTAMP},
		actual_time =
		#{actualTime,jdbcType=VARCHAR},
		actual_amount =
		#{actualAmount,jdbcType=REAL}
		WHERE
		id = #{usaId,jdbcType=INTEGER}
	</update>
	<update id="updateRecord" parameterType="Map">
		UPDATE
		litemall_usage_record
		SET status = #{status,jdbcType=INTEGER}
		WHERE id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 查询用户使用记录（当前和超时） -->
	<select id="queryRecordCount" resultType="int" parameterType="java.lang.Integer">
		SELECT count(*) FROM litemall_usage_record
		where deleted = 0
		and (status= 0 OR status =2)
		and user_id = #{userId,jdbcType=INTEGER}
	</select>
	<!-- 将超时的柜子与使用记录修改为超时 -->
	<update id="Expire" parameterType="Date">
		update litemall_usage_record as usa,
		litemall_sub_cabinet as sub
		set sub.status = 4, usa.status = 2 
		where usa.sub_cab_id = sub.id and 
		end_time <![CDATA[ < ]]> #{date, jdbcType=TIMESTAMP}
		and usa.status = 0
	</update>

	<!-- 提前30分钟查询柜子即将到期的 -->
	<select id="SoonExpire" resultMap="RecordAndUserMapAndCount"
		parameterType="map">
		select *,count(user.id) as count from litemall_usage_record as
		usa left
		join litemall_user as
		user
		on user.id = usa.user_id
		where usa.end_time <![CDATA[ < ]]> #{date,jdbcType=TIMESTAMP}
		and notice = 0
		and usa.status = 0
		group by user.id
	</select>
	
	<!-- 根据子柜ID查询已超时的使用记录 -->
	<select id="getUsaBySubId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select * from litemall_usage_record 
		where status = 2 and 
		sub_cab_id = #{subId,jdbcType=INTEGER}
	</select>
	
	<!-- 修改当前订单已发送到期通知 -->
	<update id="ExpireNotice" parameterType="java.lang.Integer">
		update
		litemall_usage_record
		set notice = 1 where id = #{id,jdbcType=INTEGER}
	</update>
	<resultMap id="RecordAndUserMapAndCount"
		type="org.linlinjava.litemall.db.domain.LitemallUsageAndUser">
		<id column="id" property="usa.id" jdbcType="INTEGER" />
		<result column="user_id" property="usa.userId" jdbcType="INTEGER" />
		<result column="sub_cab_id" property="usa.subCabId" jdbcType="INTEGER" />
		<result column="status" property="usa.status" jdbcType="INTEGER" />
		<result column="start_time" property="usa.startTime" jdbcType="TIMESTAMP" />
		<result column="end_time" property="usa.endTime" jdbcType="TIMESTAMP" />
		<result column="pre_amount" property="usa.preAmount" jdbcType="REAL" />
		<result column="actual_amount" property="usa.actualAmount"
			jdbcType="REAL" />
		<result column="pre_time" property="usa.preTime" jdbcType="TIMESTAMP" />
		<result column="actual_time" property="usa.actualTime"
			jdbcType="TIMESTAMP" />
		<result column="add_time" property="usa.addTime" jdbcType="TIMESTAMP" />
		<result column="phone_pass" property="usa.phonePass" jdbcType="VARCHAR" />
		<result column="update_time" property="usa.updateTime"
			jdbcType="TIMESTAMP" />
		<result column="deleted" property="usa.deleted" jdbcType="BIT" />
		<result column="region" property="usa.region" jdbcType="VARCHAR" />
		<result column="sub_cab_num" property="usa.subCabNum" jdbcType="VARCHAR" />
		<result column="standard" property="usa.standard" jdbcType="VARCHAR" />
		<result column="usa_money" property="usa.usaMoney" jdbcType="VARCHAR" />
		<result column="usa_capp" property="usa.usaCapp" jdbcType="INTEGER" />
		<result column="usa_free" property="usa.usaFree" jdbcType="INTEGER" />
		<result column="usa_beyond" property="usa.usaBeyond" jdbcType="INTEGER" />
		<result column="count" property="count" jdbcType="INTEGER" />  <!-- 统计条数 -->
		<result column="nickname" property="user.nickname" jdbcType="VARCHAR" /> <!-- 用户名称 -->
		<result column="mobile" property="user.mobile" jdbcType="VARCHAR" /> 	<!-- 用户手机 -->
	</resultMap>
	<!-- 查询订单中数量-->
	<select id="queryAllTotal" resultType="java.lang.Integer" parameterType="map">
		select count(*) from litemall_usage_record
		where deleted = 0
		and user_id = #{userId,jdbcType=INTEGER}
		and status = #{status,jdbcType=INTEGER}
	</select>
	<!-- 条件查询订单信息-->
	<select id="selectRecord" resultMap="BaseResultMap" parameterType="map">
		select record.* , stan.stan_deposit ,stan.stan_name, sub.sub_cab_num
		FROM litemall_usage_record AS record,
		litemall_standards AS stan,
		litemall_sub_cabinet AS sub
		WHERE record.sub_cab_id = sub.id
		AND sub.stan_id = stan.id
		<if test="userId != null">
			and user_id = #{userId,jdbcType=INTEGER}
		</if>
		<if test="status != null">
			and record.`status` = #{status,jdbcType=INTEGER}
		</if>
		<if test="page !=null and size != null">
			limit #{page} , #{size}
		</if>
	</select>
</mapper>